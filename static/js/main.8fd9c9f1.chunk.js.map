{"version":3,"sources":["components/CustomizeLink.js","components/Header.js","pages/Counter.js","components/TodoForm.js","components/TodoListItem.js","components/TodoList.js","pages/TodoApp.js","components/Loading.js","pages/Users.js","pages/User.js","App.js","serviceWorker.js","index.js"],"names":["CustomizeLink","_ref","to","label","staff","exact","Object","objectWithoutProperties","react_default","a","createElement","Route","path","children","_ref2","match","assign","className","Link","Header","collapse","useRef","hideCollaspe","window","$","current","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","ref","components_CustomizeLink","onClick","Counter","_useState","useState","_useState2","slicedToArray","count","setCount","disabled","TodoForm","addTodo","inputEl","action","onSubmit","e","preventDefault","value","placeholder","TodoListItem","todo","toggleTodo","deleteTodo","key","checked","completed","onChange","htmlFor","text","TodoList","todos","length","map","components_TodoListItem","TodoApp","v4","setTodos","components_TodoForm","newTodo","concat","toConsumableArray","components_TodoList","objectSpread","filter","Loading","Users","loading","setLoading","_useState3","_useState4","users","setUsers","useEffect","fetch","then","res","json","uses","react","components_Loading","user","name","username","email","User","setUser","params","resp","keys","toLocaleUpperCase","App","components_Header","Switch","Redirect","from","component","Boolean","location","hostname","ReactDOM","render","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8fd9c9f1.chunk.js","sourcesContent":["import React from 'react';\nimport { Route, Link } from 'react-router-dom';\n\nconst CustomizeLink = ({ to, label, exact = true, ...staff }) => {\n  return (\n    <Route\n      exact\n      path={to}\n      children={({ match }) => {\n        return (\n          <li className={match ? 'nav-item active' : 'nav-item'} {...staff}>\n            <Link className=\"nav-link\" to={to}>\n              {label} <span className=\"sr-only\">(current)</span>\n            </Link>\n          </li>\n        );\n      }}\n    />\n  );\n};\n\nexport default CustomizeLink;\n","import React, { useRef } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport CustomizeLink from './CustomizeLink';\n\nconst Header = () => {\n  const collapse = useRef(null);\n\n  const hideCollaspe = () => {\n    window.$(collapse.current).collapse('hide');\n  };\n\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        React Hooks\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarContent\"\n        aria-controls=\"navbarContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\" />\n      </button>\n      <div\n        className=\"collapse  navbar-collapse\"\n        id=\"navbarContent\"\n        ref={collapse}\n      >\n        <ul className=\"navbar-nav mr-auto\">\n          <CustomizeLink to=\"/counter\" label=\"计数器\" onClick={hideCollaspe} />\n          <CustomizeLink\n            to=\"/todo-app\"\n            label=\"待办事项\"\n            onClick={hideCollaspe}\n          />\n          <CustomizeLink\n            to=\"/users\"\n            label=\"用户列表(useEffect)\"\n            onClick={hideCollaspe}\n          />\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Header;\n","import React, { useState } from 'react';\n\nconst Counter = () => {\n  const [count, setCount] = useState(0);\n\n  const increment = () => {\n    setCount(count + 1);\n  };\n\n  const decrement = () => {\n    setCount(count - 1);\n  };\n\n  const resetCount = () => {\n    setCount(0);\n  };\n\n  return (\n    <div>\n      <h1 className=\"text-center count\">{count}</h1>\n      <div className=\"btns-group text-center\">\n        <button className=\"btn btn-primary\" onClick={increment}>\n          加\n        </button>\n        <button className=\"btn btn-danger\" onClick={decrement}>\n          减\n        </button>\n        <button\n          className=\"btn btn-secondary\"\n          disabled={count === 0}\n          onClick={resetCount}\n        >\n          复位\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Counter;\n","import React, { useRef } from 'react';\n\nconst TodoForm = ({ addTodo }) => {\n  const inputEl = useRef(null);\n\n  const submitHandle = e => {\n    e.preventDefault();\n\n    const { value } = inputEl.current;\n\n    if (value) {\n      addTodo(value);\n      inputEl.current.value = '';\n    }\n  };\n\n  return (\n    <form action=\"\" onSubmit={submitHandle}>\n      <div className=\"form-group\">\n        <input\n          className=\"form-control\"\n          type=\"text\"\n          placeholder=\"待办事项\"\n          ref={inputEl}\n        />\n      </div>\n      <button className=\"btn btn-primary btn-block\">添加待办</button>\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from 'react';\n\nconst TodoListItem = ({ todo, toggleTodo, deleteTodo }) => {\n  return (\n    <li className=\"list-group-item\" key={todo.id}>\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <input\n            type=\"checkbox\"\n            checked={todo.completed}\n            id={todo.id}\n            onChange={() => {\n              toggleTodo(todo.id);\n            }}\n          />{' '}\n        </div>\n        <div className=\"col-7\">\n          <label\n            htmlFor={todo.id}\n            className={todo.completed ? 'text-muted font-italic' : ''}\n          >\n            {todo.text}\n          </label>\n        </div>\n        <div className=\"col-3 text-right\">\n          <button\n            className=\"btn btn-sm btn-danger\"\n            onClick={() => {\n              deleteTodo(todo.id);\n            }}\n          >\n            删除\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n};\n\nexport default TodoListItem;\n","import React from 'react';\n\nimport TodoListItem from './TodoListItem';\n\nconst TodoList = ({ todos, toggleTodo, deleteTodo }) => {\n  return (\n    <ul className=\"todo-list list-group mt-4\">\n      {todos.length === 0 && (\n        <li className=\"list-group-item text-center\">暂无待办</li>\n      )}\n      {todos.map(todo => (\n        <TodoListItem\n          key={todo.id}\n          todo={todo}\n          deleteTodo={deleteTodo}\n          toggleTodo={toggleTodo}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React, { useState } from 'react';\nimport { v4 } from 'uuid';\nimport TodoForm from '../components/TodoForm';\nimport TodoList from '../components/TodoList';\n\nconst TodoApp = () => {\n  const [todos, setTodos] = useState([\n    {\n      id: v4(),\n      text: 'Learn JavaScript',\n      completed: false\n    },\n    {\n      id: v4(),\n      text: 'Learn React',\n      completed: false\n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodo = {\n      id: v4(),\n      text,\n      completed: false\n    };\n\n    setTodos([newTodo, ...todos]);\n  };\n\n  const toggleTodo = id => {\n    setTodos(\n      todos.map(todo =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      )\n    );\n  };\n\n  const deleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n\n  return (\n    <div className=\"row justify-content-md-center\">\n      <div className=\"col-md-6 col-xs-12\">\n        <TodoForm addTodo={addTodo} />\n        <TodoList\n          todos={todos}\n          toggleTodo={toggleTodo}\n          deleteTodo={deleteTodo}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default TodoApp;\n","import React from 'react';\n\nconst Loading = () => <p className=\"text-center text-muted\">Loding users...</p>;\n\nexport default Loading;\n","import React, { useState, useEffect, Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/Loading';\n\nconst Users = () => {\n  const [loading, setLoading] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(res => res.json())\n      .then(uses => {\n        setLoading(false);\n\n        setUsers(uses);\n      });\n  }, []);\n\n  return (\n    <Fragment>\n      {loading ? (\n        <Loading />\n      ) : (\n        <div className=\"table-responsive\">\n          <table className=\"table table-bordered table-dark\">\n            <thead>\n              <tr>\n                <th>序号</th>\n                <th>姓名</th>\n                <th>用户名</th>\n                <th>邮箱</th>\n                <th>详情</th>\n              </tr>\n            </thead>\n            <tbody>\n              {users.map(user => (\n                <tr key={user.id}>\n                  <td>{user.id}</td>\n                  <td>{user.name}</td>\n                  <td>{user.username}</td>\n                  <td>{user.email}</td>\n                  <td>\n                    <Link to={`/users/${user.id}`}>详情</Link>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Users;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst User = ({ match }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { id } = match.params;\n\n  useEffect(\n    () => {\n      setLoading(true);\n\n      fetch(`https://jsonplaceholder.typicode.com/users/${id}`)\n        .then(resp => resp.json())\n        .then(user => {\n          setUser(user);\n          setLoading(false);\n        });\n    },\n    [id]\n  );\n\n  return !loading && user ? (\n    <div>\n      <p>\n        <Link to=\"/users\"> &laquo; 返回</Link>\n      </p>\n      <ul className=\"list-group\">\n        {Object.keys(user).map(key => {\n          return key === 'company' || key === 'address' ? null : (\n            <li className=\"list-group-item\" key={key}>\n              {key.toLocaleUpperCase()}: {user[key]}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  ) : null;\n};\n\nexport default User;\n","import React from 'react';\nimport { Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Header from './components/Header';\nimport Counter from './pages/Counter';\nimport TodoApp from './pages/TodoApp';\nimport Users from './pages/Users';\nimport User from './pages/User';\n\nconst App = () => (\n  <div className=\"App\">\n    <Header />\n    <div className=\"container pt-4 mt-4\">\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/counter\" />\n        <Route path=\"/counter\" component={Counter} />\n        <Route path=\"/todo-app\" component={TodoApp} />\n        <Route path=\"/users\" exact component={Users} />\n        <Route path=\"/users/:id\" exact component={User} />\n        <Route\n          component={() => (\n            <div className=\"text-center\">\n              <h1 className=\"text-danger\">404</h1>\n              <Link to=\"/\">返回首页</Link>\n            </div>\n          )}\n        />\n      </Switch>\n    </div>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}